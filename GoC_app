#!/usr/bin/python3

import sys
import os
import glob
import os.path
import tkinter as tk
from PIL import Image, ImageTk
import webbrowser

page1 = 1
page2 = 0
nbSecure = 0
nbPhishing = 0
purge = []

def Page1(null):
    main_menu = Image.open("assets/main_menu.png")
    main_menu = ImageTk.PhotoImage(main_menu)
    main_menu_label = tk.Label(image=main_menu, borderwidth=0)
    main_menu_label.image = main_menu
    main_menu_label.pack()
    main_menu_label.place(x=385, y=44)

    img_scan = Image.open("assets/scan_butt.png")
    img_scan = ImageTk.PhotoImage(img_scan)
    img_scan_label = tk.Label(image=img_scan, borderwidth=0)
    img_scan_label.image = img_scan
    img_scan_label.pack()
    img_scan_label.bind("<Button-1>", scanning)
    img_scan_label.place(x=684, y=594)

    img_details = Image.open("assets/details_butt.png")
    img_details = ImageTk.PhotoImage(img_details)
    img_details_label = tk.Label(image=img_details, borderwidth=0)
    img_details_label.image = img_details
    img_details_label.pack()
    img_details_label.bind("<Button-1>", details)
    img_details_label.place(x=972, y=594)
    page1 = 1
    page2 = 0

def Page2(null):
    result = Image.open("assets/result.png")
    result = ImageTk.PhotoImage(result)
    result_label = tk.Label(image=result, borderwidth=0)
    result_label.image = result
    result_label.pack()
    result_label.place(x=385, y=44)

    purge = Image.open("assets/purge_butt.png")
    purge = ImageTk.PhotoImage(purge)
    purge_label = tk.Label(image=purge, borderwidth=0)
    purge_label.image = purge
    purge_label.pack()
    purge_label.bind("<Button-1>", make_purge)
    purge_label.place(x=843, y=707)

    page1 = 0
    page2 = 1

    text = tk.Label(root, text=nbSecure, font="Raleway")
    text.place(x=590,y=388)
    text.config(font=("Courier", 50), bg="#202020", text=nbSecure)
    text2 = tk.Label(root, text=nbPhishing, font="Raleway")
    text2.place(x=1230,y=388)
    text2.config(font=("Courier", 50), bg="#202020", text=nbPhishing)
    text3 = tk.Label(root, text=nbPhishing + nbSecure, font="Raleway")
    text3.place(x=840,y=358)
    text3.config(font=("Courier", 150), bg="#202020", text=nbSecure + nbPhishing)

def make_purge(null):
    global nbPhishing
    nbPhishing = 0
    global purge
    for file in purge:
        if os.path.isfile(file):
            os.remove(file) 
    purge = []

def scanning(null):
    print("Scanning")
    folderpath = "./mails"
    if os.path.exists(folderpath) != 1:
        print("Please create a folder named 'mails' and add each file.eml you want check")
        sys.exit(84)
    mailsContent = [mail for mail in glob.glob("./mails/*.eml")]
    tmpPhishing = 0
    tmpSecure = 0
    print(mailsContent)
    global purge
    for m in mailsContent:
        print(m)
        tmp = os.system("java -jar script/ColorChecker-1.jar " + m)
        if tmp == 0:
            tmpSecure += 1
        else:
            tmpPhishing += 1
            purge.append(m)
    global nbPhishing
    global nbSecure
    nbPhishing = tmpPhishing
    nbSecure = tmpSecure

def details(null):
    webbrowser.open('https://github.com/AntoineGsr/GoC-2022')

root = tk.Tk()

def main():
    print("App launched")
    
    root.wm_geometry("1589x868")
    root.title("EPYPHISH - GoC 2022")

    background = Image.open("assets/background.png")
    background = ImageTk.PhotoImage(background)
    background_label = tk.Label(image=background)
    background_label.image = background
    background_label.place(x=0, y=0)

    home = Image.open("assets/home_butt.png")
    home = ImageTk.PhotoImage(home)
    home_label = tk.Label(image=home, borderwidth=0)
    home_label.image = home
    home_label.pack()
    home_label.bind("<Button-1>", Page1)
    home_label.place(x=131, y=239)

    result = Image.open("assets/result_butt.png")
    result = ImageTk.PhotoImage(result)
    result_label = tk.Label(image=result, borderwidth=0)
    result_label.image = result
    result_label.pack()
    result_label.bind("<Button-1>", Page2)
    result_label.place(x=131, y=325)
    if page1 == 1:
        Page1("null")
    else:
        Page2("null")

    root.mainloop()

if __name__ == '__main__':
    sys.exit(main())
